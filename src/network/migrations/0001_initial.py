# Generated by Django 5.2.6 on 2025-09-30 15:32

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="NetworkNode",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "name",
                    models.CharField(
                        help_text='Название организации (например, "Завод электроники Самсунг")',
                        max_length=255,
                        verbose_name="Название",
                    ),
                ),
                (
                    "node_type",
                    models.CharField(
                        choices=[
                            ("FACTORY", "Завод"),
                            ("RETAIL", "Розничная сеть"),
                            ("IE", "Индивидуальный предприниматель"),
                        ],
                        default="FACTORY",
                        help_text="Тип организации в цепи поставок",
                        max_length=10,
                        verbose_name="Тип звена",
                    ),
                ),
                (
                    "email",
                    models.EmailField(help_text="Контактный email организации", max_length=254, verbose_name="Email"),
                ),
                (
                    "country",
                    models.CharField(help_text="Страна регистрации организации", max_length=100, verbose_name="Страна"),
                ),
                (
                    "city",
                    models.CharField(
                        db_index=True, help_text="Город нахождения организации", max_length=100, verbose_name="Город"
                    ),
                ),
                ("street", models.CharField(help_text="Название улицы", max_length=255, verbose_name="Улица")),
                (
                    "house_number",
                    models.CharField(
                        help_text="Номер дома, может включать корпус и строение",
                        max_length=20,
                        verbose_name="Номер дома",
                    ),
                ),
                (
                    "hierarchy_level",
                    models.PositiveSmallIntegerField(
                        default=0,
                        editable=False,
                        help_text="0 - завод, 1 - прямой клиент завода, и т.д.",
                        verbose_name="Уровень иерархии",
                    ),
                ),
                (
                    "debt",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Сумма задолженности в рублях (с копейками)",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                        verbose_name="Задолженность перед поставщиком",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Дата и время создания записи в системе",
                        verbose_name="Дата создания",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Дата и время последнего обновления записи",
                        verbose_name="Дата обновления",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        blank=True,
                        help_text="Поставщик продукции (пусто для заводов)",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="clients",
                        to="network.networknode",
                        verbose_name="Поставщик",
                    ),
                ),
            ],
            options={
                "verbose_name": "Звено сети",
                "verbose_name_plural": "Звенья сети",
                "ordering": ["hierarchy_level", "name"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "name",
                    models.CharField(
                        help_text='Название продукта (например, "Смартфон")',
                        max_length=255,
                        verbose_name="Название продукта",
                    ),
                ),
                (
                    "model",
                    models.CharField(
                        help_text='Модель продукта (например, "Galaxy S21")', max_length=100, verbose_name="Модель"
                    ),
                ),
                (
                    "release_date",
                    models.DateField(
                        help_text="Дата, когда продукт появился на рынке", verbose_name="Дата выхода на рынок"
                    ),
                ),
                (
                    "network_node",
                    models.ForeignKey(
                        help_text="К какому звену сети относится этот продукт",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="network.networknode",
                        verbose_name="Звено сети",
                    ),
                ),
            ],
            options={
                "verbose_name": "Продукт",
                "verbose_name_plural": "Продукты",
                "ordering": ["-release_date", "name"],
            },
        ),
        migrations.AddIndex(
            model_name="networknode",
            index=models.Index(fields=["country", "hierarchy_level"], name="network_net_country_a723f1_idx"),
        ),
        migrations.AddIndex(
            model_name="networknode",
            index=models.Index(fields=["supplier", "node_type"], name="network_net_supplie_885feb_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="product",
            unique_together={("network_node", "name", "model")},
        ),
    ]
